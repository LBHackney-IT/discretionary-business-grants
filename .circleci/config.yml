version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  aws_assume_role: lbh-hackit/aws_assume_role@0.1.0

executors:
  docker-python:
    docker:
      - image: circleci/python:3.7

references:
  workspace_root: &workspace_root "~"
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  deploy-staging:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - aws-cli/install
      - checkout
      - run:
          name: install serverless
          command: sudo npm i -g serverless@^3
      - run:
          name: clear the S3 bucket
          no_output_timeout: 45m
          command: |
            bucket_name="discretionary-business-grants-supporting-documents-staging"

            aws s3 rm "s3://$bucket_name" --recursive
            aws s3api delete-bucket --bucket "$bucket_name"
      - run:
          name: serverless deploy
          command: sls deploy --stage staging

  deploy-production:
    executor: aws-cli/default
    steps:
      - *attach_workspace
      - checkout
      - run:
          name: install serverless
          command: sudo npm i -g serverless@^3
      - run:
          name: serverless deploy
          command: sls deploy --stage production

  assume-role-staging:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_STAGING
          profile_name: default
          role: "LBH_Circle_CI_Deployment_Role"
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

  assume-role-production:
    executor: docker-python
    steps:
      - checkout
      - aws_assume_role/assume_role:
          account: $AWS_ACCOUNT_PRODUCTION
          profile_name: default
          role: "LBH_Circle_CI_Deployment_Role"
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - .aws

workflows:
  version: 2
  continuous-delivery:
    jobs:
      - assume-role-staging:
          context: api-assume-role-staging-context
          filters:
            branches:
              only: master
      - permit-deploy-staging:
          type: approval
          requires:
            - assume-role-staging
          filters:
            branches:
              only: master
      - deploy-staging:
          requires:
            - permit-deploy-staging
          filters:
            branches:
              only:
                - master
      - assume-role-production:
          context: api-assume-role-production-context
          requires:
            - deploy-staging
          filters:
            branches:
              only: master
      - permit-deploy-production:
          type: approval
          requires:
            - assume-role-production
          filters:
            branches:
              only:
                - master
      - deploy-production:
          requires:
            - permit-deploy-production
          filters:
            branches:
              only:
                - master
