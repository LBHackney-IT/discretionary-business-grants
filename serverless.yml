service: discretionary-business-grants

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  stage: ${opt:stage}
  dbname: discretionaryBusinessGrantsDb
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:ListBucket
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

package:
  individually: true
  exclude:
    - ./**

functions:
  discretionary-business-grants:
    name: ${self:service}-${self:provider.stage}
    handler: lambda.handler
    package:
      include:
        - lambda.js
        - next.config.js
        - pages/**
        - public/**
        - build/_next/**
        - node_modules/**
    events:
      - http:
          path: api/{proxy+}
          method: ANY
          authorizer:
            name: authorizer
            type: request
            identitySource: ''
            resultTtlInSeconds: 0
      - http: ANY /
      - http: ANY /{proxy+}
    vpc:
      securityGroupIds:
        - Fn::GetAtt:
          - discretionaryBusinessGrantsDbSecurityGroup
          - GroupId
      subnetIds: ${self:custom.subnets.${self:provider.stage}}
    environment:
      ENV: ${self:provider.stage}
      HOST:
        Fn::GetAtt:
          - discretionaryBusinessGrantsDb
          - Endpoint.Address
      USERNAME: ${env:MASTER_USERNAME}
      PASSWORD: ${env:MASTER_USER_PASSWORD}
      DATABASE: ${self:provider.dbname}
      SUPPORTING_DOCUMENTS_BUCKET: ${self:custom.bucket}
      URL_PREFIX: ${self:custom.aliases.${self:provider.stage}}
      POSTCODE_LOOKUP_URL: ${env:POSTCODE_LOOKUP_URL}
      EXPIRATION_DATE: ${env:EXPIRATION_DATE}
      HACKNERY_AUTH_URL: ${env:HACKNERY_AUTH_URL}
      POSTCODE_LOOKUP_APIKEY: ${env:POSTCODE_LOOKUP_APIKEY}
      GOV_NOTIFY_API_KEY: ${env:GOV_NOTIFY_API_KEY}
      EMAIL_APPLICATION_RECEIVED_TEMPLATE_ID: ${env:EMAIL_APPLICATION_RECEIVED_TEMPLATE_ID}

  authorizer:
    name: ${self:service}-authorizer-${self:provider.stage}
    handler: authorizer.handler
    package:
      include:
        - authorizer/**
        - node_modules/**
    environment:
      ALLOWED_GROUPS: ${self:custom.allowed-groups.${self:provider.stage}}
      JWT_SECRET: ${ssm:hackney-jwt-secret}

resources:
  Resources:
    discretionaryBusinessGrantsSupportingDocumentsBucket:
        Type: AWS::S3::Bucket
        Properties:
          BucketName: ${self:custom.bucket}
          PublicAccessBlockConfiguration:
            BlockPublicAcls: true
            BlockPublicPolicy: true
            IgnorePublicAcls: true
            RestrictPublicBuckets: true
          BucketEncryption:
            ServerSideEncryptionConfiguration:
              - ServerSideEncryptionByDefault:
                  SSEAlgorithm: AES256
          CorsConfiguration:
            CorsRules:
              -
                AllowedOrigins:
                  - '*'
                AllowedHeaders:
                  - '*'
                AllowedMethods:
                  - PUT
                  - POST
                MaxAge: 3000
    discretionaryBusinessGrantsDbSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Access to Postgres
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '5432'
          ToPort: '5432'
          CidrIp: 0.0.0.0/0

    discretionaryBusinessGrantsDb:
      Type: "AWS::RDS::DBInstance"
      Properties:
        DBInstanceIdentifier: "discretionary-business-grants-db-${self:provider.stage}"
        DBName: ${self:provider.dbname}
        AllocatedStorage: 5
        DBInstanceClass: "db.t3.micro"
        Engine: "postgres"
        EngineVersion: "11.22"
        CACertificateIdentifier: "rds-ca-rsa2048-g1"
        MasterUsername: ${env:MASTER_USERNAME}
        MasterUserPassword: ${env:MASTER_USER_PASSWORD}
        VPCSecurityGroups:
        - Fn::GetAtt:
          - discretionaryBusinessGrantsDbSecurityGroup
          - GroupId
        Tags:
          - Key: "Name"
            Value: "discretionaryBusinessGrantsDb"
          - Key: "STAGE"
            Value: ${self:provider.stage}
          - Key: "Test"
            Value: "staging-cci-applied"
      DeletionPolicy: "Snapshot"

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Aliases:
            - ${self:custom.aliases.${self:provider.stage}}
          PriceClass: PriceClass_100
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificate-arn.${self:provider.stage}}
            MinimumProtocolVersion: TLSv1.2_2018
            SslSupportMethod: sni-only
          DefaultCacheBehavior:
            TargetOriginId: ${self:service}-${self:provider.stage}-custom-origin
            ViewerProtocolPolicy: 'redirect-to-https'
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            DefaultTTL: 0
            MaxTTL: 0
            MinTTL: 0
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
          Enabled: true
          Origins:
            - Id: ${self:service}-${self:provider.stage}-custom-origin
              DomainName: ${self:custom.domain-name}
              OriginPath: /${self:provider.stage}
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only

custom:
  bucket: ${self:service}-supporting-documents-${self:provider.stage}
  domain-name:
    Fn::Join:
      - '.'
      - - Ref: ApiGatewayRestApi
        - execute-api
        - eu-west-2
        - amazonaws.com
  aliases:
    staging: staging-discretionarybusinessgrants.hackney.gov.uk
    production: discretionarybusinessgrants.hackney.gov.uk
  certificate-arn:
    staging: arn:aws:acm:us-east-1:715003523189:certificate/b4b3fb9b-febb-493a-bc54-ea8891d68536
    production: arn:aws:acm:us-east-1:153306643385:certificate/6181c0d4-c6d1-4436-9050-e3a1837aba44
  subnets:
    staging:
      - subnet-07e8364b
      - subnet-723cb408
      - subnet-48094621
    production:
      - subnet-034b2a03cd4955923
      - subnet-03431a6c898502c99
      - subnet-0f02c86bab1d62956
  allowed-groups:
    staging: 'DBG - Admin Staging'
    production: 'DBG - Admins'
